from cmu_graphics import *
import random

class Obstacle:
    def __init__(self,x,y):
        widthChoices = [300,152]
        heightChoices = [15,30]
        self.x = x
        self.y = y
        self.width = random.choice(widthChoices)
        if self.width==300:
            self.height = 30
        else:
            self.height = 15
    
    def move(self,speed):
        self.y-=speed



def onAppStart(app):
    newGame(app)

def newGame(app):
    app.gameOver = False
    app.scrollY = 0
    app.scrollObstacle = 0
    app.paused = False
    app.jumping = False
    app.playerHeight = 50
    app.playerWidth = 30
    app.index = 0
    app.obstacles = []
    app.stepsPerSecond = 10

def onStep(app):
    if not app.paused:
        app.scrollY-=4
        app.scrollObstacle-=0.1
        app.index = (app.index+1)%3
        if app.index == 2 and app.jumping == True:
            app.jumping = False
        if random.randint(0,100) < 4:
            obstacle_x = 0
            obstacle_y = 0
            app.obstacles.append(Obstacle(obstacle_x,obstacle_y))

def onKeyPress(app,key):
    if key=='p':
        app.paused = not app.paused
    elif key == 'space':
        if app.jumping==False:
            app.jumping = True
            

def redrawAll(app):
    # draw the player fixed to the center of the scrolled canvas
    if app.jumping == False:
        listy = [0,0,0]
    else:
        listy = [0,50,0]

    player_x = app.width//2 - app.playerWidth//2
    player_y = app.height//2 - app.playerHeight//2
    drawRect(player_x, player_y - listy[app.index], 
             app.playerWidth,app.playerHeight,fill = 'cyan')
    
    
    # draw the x and y axes
    x = app.width/2 # <-- This is where we scroll the axis!
    y = 0 - app.scrollY
    drawLine(x, 0, x, app.height)
    drawLine(0, y, app.width, y)

    
    for obstacle in app.obstacles:
        obstacle.move(app.scrollObstacle)
        drawRect(obstacle.x,obstacle.y,
                 obstacle.width,obstacle.height,fill='pink')
    
    obstacles = [obstacle for obstacle in app.obstacles if obstacle.y 
                 > app.height]

runApp(width=300, height=300)